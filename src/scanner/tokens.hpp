#pragma once

#include <util/types.hpp>

#define TOKEN(id) struct id : public Token{\
    id(string text) : Token(text) {}\
};



struct Token { 
    string text;
    Token(string text) : text(text) {};
};

// Punctuators
TOKEN(COMMA)
TOKEN(DOT)
TOKEN(COLON)
TOKEN(SEMICOLON)
TOKEN(OPEN_SQUARE_BRACKET)
TOKEN(CLOSE_SQUARE_BRACKET)
TOKEN(OPEN_PARENTHESIS)
TOKEN(CLOSE_PARENTHESIS)

// Operators
TOKEN(ASSIGN)
TOKEN(EQUALS)
TOKEN(GREATER)
TOKEN(GREATER_OR_EQUAL)
TOKEN(LESS)
TOKEN(LESS_OR_EQUAL)
TOKEN(ADD)
TOKEN(ADD_ASSIGN)
TOKEN(SUBTRACT)
TOKEN(SUBTRACT_ASSIGN)
TOKEN(MULTIPLY)
TOKEN(MULTIPLY_ASSIGN)
TOKEN(DIVIDE)
TOKEN(DIVIDE_ASSIGN)
TOKEN(MODULUS)
TOKEN(MODULUS_ASSIGN)
TOKEN(REFERENCE)
TOKEN(DEREFERENCE)

// Identifiers
TOKEN(IDENTIFIER)

// Literals
TOKEN(TRUE)
TOKEN(FALSE)
TOKEN(NUMBER)

// Datatypes
TOKEN(BOOL)
TOKEN(INT4)
TOKEN(INT8)
TOKEN(INT16)
TOKEN(INT32)
TOKEN(INT64)

// Keywords
TOKEN(NOT)
TOKEN(OR)
TOKEN(AND)
TOKEN(CONST)
TOKEN(IF)
TOKEN(ELSE)
TOKEN(SWITCH)
TOKEN(CASE)
TOKEN(DEFAULT)
TOKEN(FOR)
TOKEN(WHILE)
TOKEN(CONTINUE)
TOKEN(BREAK)
TOKEN(RETURN)